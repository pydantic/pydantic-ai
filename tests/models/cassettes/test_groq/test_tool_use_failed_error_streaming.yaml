interactions:
- request:
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '517'
      content-type:
      - application/json
      host:
      - api.groq.com
    method: POST
    parsed_body:
      messages:
      - content: Be concise. Never use pretty double quotes, just regular ones.
        role: system
      - content: Please call the "get_something_by_name" tool with non-existent parameters to test error handling
        role: user
      model: openai/gpt-oss-120b
      n: 1
      stream: false
      tool_choice: auto
      tools:
      - function:
          description: ''
          name: get_something_by_name
          parameters:
            additionalProperties: false
            properties:
              name:
                type: string
            required:
            - name
            type: object
        type: function
    uri: https://api.groq.com/openai/v1/chat/completions
  response:
    headers:
      alt-svc:
      - h3=":443"; ma=86400
      cache-control:
      - private, max-age=0, no-store, no-cache, must-revalidate
      connection:
      - keep-alive
      content-length:
      - '380'
      content-type:
      - application/json
      vary:
      - Origin
    parsed_body:
      error:
        code: tool_use_failed
        failed_generation: |-
          {"name": "get_something_by_name", "arguments": {
            "foo": "bar"
          }}
        message: 'Tool call validation failed: tool call validation failed: parameters for tool get_something_by_name did
          not match schema: errors: [missing properties: ''name'', additionalProperties ''foo'' not allowed]'
        type: invalid_request_error
    status:
      code: 400
      message: Bad Request
- request:
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1161'
      content-type:
      - application/json
      cookie:
      - __cf_bm=kvyx00m1ZCoUxtReHO5R3CLjlagpfc3zaE3NHcOBcEg-1756847032-1.0.1.1-mhlTYHoy8EzRcE6WRp3Kbr0WLwPgSt6yJkEa03NW.uHOVGIamR_B1D9CQC02AE7f_MsgQZdLmSTH30Pj90A_rOvXgvtbCZ2zMTLVux2diGE
      host:
      - api.groq.com
    method: POST
    parsed_body:
      messages:
      - content: Be concise. Never use pretty double quotes, just regular ones.
        role: system
      - content: Please call the "get_something_by_name" tool with non-existent parameters to test error handling
        role: user
      - role: assistant
        tool_calls:
        - function:
            arguments: '{"foo":"bar"}'
            name: get_something_by_name
          id: pyd_ai_634b53be19c74d98a52ac8667fb097f9
          type: function
      - content: |-
          2 validation errors: [
            {
              "type": "missing",
              "loc": [
                "name"
              ],
              "msg": "Field required",
              "input": {
                "foo": "bar"
              }
            },
            {
              "type": "extra_forbidden",
              "loc": [
                "foo"
              ],
              "msg": "Extra inputs are not permitted",
              "input": "bar"
            }
          ]

          Fix the errors and try again.
        role: tool
        tool_call_id: pyd_ai_634b53be19c74d98a52ac8667fb097f9
      model: openai/gpt-oss-120b
      n: 1
      stream: false
      tool_choice: auto
      tools:
      - function:
          description: ''
          name: get_something_by_name
          parameters:
            additionalProperties: false
            properties:
              name:
                type: string
            required:
            - name
            type: object
        type: function
    uri: https://api.groq.com/openai/v1/chat/completions
  response:
    headers:
      alt-svc:
      - h3=":443"; ma=86400
      cache-control:
      - private, max-age=0, no-store, no-cache, must-revalidate
      connection:
      - keep-alive
      content-length:
      - '1025'
      content-type:
      - application/json
      transfer-encoding:
      - chunked
      vary:
      - Origin
    parsed_body:
      choices:
      - finish_reason: tool_calls
        index: 0
        logprobs: null
        message:
          reasoning: 'The user wants to test error handling by calling tool with non-existent parameters. We need to call
            with correct parameters? The instruction from system: be concise. We should call get_something_by_name with a
            name that likely does not exist, like "nonexistent". That will be a valid call.'
          role: assistant
          tool_calls:
          - function:
              arguments: '{"name":"nonexistent_item"}'
              name: get_something_by_name
            id: fc_03620243-e944-4d56-ba2a-56668e07a615
            type: function
      created: 1756847032
      id: chatcmpl-83caeaeb-fb2f-4943-a955-722ec33c7a71
      model: openai/gpt-oss-120b
      object: chat.completion
      service_tier: on_demand
      system_fingerprint: fp_213abb2467
      usage:
        completion_time: 0.176651145
        completion_tokens: 89
        prompt_time: 0.015464239
        prompt_tokens: 280
        queue_time: 0.252471564
        total_time: 0.192115384
        total_tokens: 369
      usage_breakdown: null
      x_groq:
        id: req_01k463wj2sesabnwy9jx2hhmr9
    status:
      code: 200
      message: OK
- request:
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1477'
      content-type:
      - application/json
      cookie:
      - __cf_bm=kvyx00m1ZCoUxtReHO5R3CLjlagpfc3zaE3NHcOBcEg-1756847032-1.0.1.1-mhlTYHoy8EzRcE6WRp3Kbr0WLwPgSt6yJkEa03NW.uHOVGIamR_B1D9CQC02AE7f_MsgQZdLmSTH30Pj90A_rOvXgvtbCZ2zMTLVux2diGE
      host:
      - api.groq.com
    method: POST
    parsed_body:
      messages:
      - content: Be concise. Never use pretty double quotes, just regular ones.
        role: system
      - content: Please call the "get_something_by_name" tool with non-existent parameters to test error handling
        role: user
      - role: assistant
        tool_calls:
        - function:
            arguments: '{"foo":"bar"}'
            name: get_something_by_name
          id: pyd_ai_634b53be19c74d98a52ac8667fb097f9
          type: function
      - content: |-
          2 validation errors: [
            {
              "type": "missing",
              "loc": [
                "name"
              ],
              "msg": "Field required",
              "input": {
                "foo": "bar"
              }
            },
            {
              "type": "extra_forbidden",
              "loc": [
                "foo"
              ],
              "msg": "Extra inputs are not permitted",
              "input": "bar"
            }
          ]

          Fix the errors and try again.
        role: tool
        tool_call_id: pyd_ai_634b53be19c74d98a52ac8667fb097f9
      - role: assistant
        tool_calls:
        - function:
            arguments: '{"name":"nonexistent_item"}'
            name: get_something_by_name
          id: fc_03620243-e944-4d56-ba2a-56668e07a615
          type: function
      - content: 'Something with name: nonexistent_item'
        role: tool
        tool_call_id: fc_03620243-e944-4d56-ba2a-56668e07a615
      model: openai/gpt-oss-120b
      n: 1
      stream: false
      tool_choice: auto
      tools:
      - function:
          description: ''
          name: get_something_by_name
          parameters:
            additionalProperties: false
            properties:
              name:
                type: string
            required:
            - name
            type: object
        type: function
    uri: https://api.groq.com/openai/v1/chat/completions
  response:
    headers:
      alt-svc:
      - h3=":443"; ma=86400
      cache-control:
      - private, max-age=0, no-store, no-cache, must-revalidate
      connection:
      - keep-alive
      content-length:
      - '834'
      content-type:
      - application/json
      transfer-encoding:
      - chunked
      vary:
      - Origin
    parsed_body:
      choices:
      - finish_reason: stop
        index: 0
        logprobs: null
        message:
          content: |-
            The tool call succeeded, returning:

            ```
            Something with name: nonexistent_item
            ```
          reasoning: 'The user wants to test error handling. We called with non-existent name. The tool returned "Something
            with name: nonexistent_item". That seems fine. We should respond accordingly.'
          role: assistant
      created: 1756847033
      id: chatcmpl-524b1ea5-e9d4-412f-8e4a-990fe0f8d211
      model: openai/gpt-oss-120b
      object: chat.completion
      service_tier: on_demand
      system_fingerprint: fp_213abb2467
      usage:
        completion_time: 0.123881517
        completion_tokens: 62
        prompt_time: 0.0153609
        prompt_tokens: 318
        queue_time: 0.247418451
        total_time: 0.139242417
        total_tokens: 380
      usage_breakdown: null
      x_groq:
        id: req_01k463wjm2fwprzdr9q09cxwyc
    status:
      code: 200
      message: OK
version: 1
