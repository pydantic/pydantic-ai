name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

env:
  CI: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --python 3.12 --frozen

      - run: make lint
      - run: make typecheck
      - run: make typecheck-mypy

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - run: mkdir coverage-files

      - run: uv run --python 3.9 coverage run -m pytest
        env:
          COVERAGE_FILE: coverage-files/.coverage-py39

      - run: uv run --python 3.10 coverage run -m pytest
        env:
          COVERAGE_FILE: coverage-files/.coverage-py310

      - run: uv run --python 3.11 coverage run -m pytest
        env:
          COVERAGE_FILE: coverage-files/.coverage-py311

      - run: uv run --python 3.12 coverage run -m pytest
        env:
          COVERAGE_FILE: coverage-files/.coverage-py312

      - run: uv run --python 3.13 coverage run -m pytest
        env:
          COVERAGE_FILE: coverage-files/.coverage-py313

      - run: uv run --frozen coverage combine coverage-files
#      - run: uv run --frozen coverage xml
#      - uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          file: ./coverage.xml
      - run: uv run --frozen coverage report --fail-under 70

  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    needs: [check]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - run: uv python install 3.12

      - name: check GITHUB_REF matches package version
        uses: samuelcolvin/check-python-version@v4.1
        with:
          version_file_path: pyproject.toml

      - run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
